#---------------------------------------------------必要配置&通用配置-------------------------------------------------------
# spring base
spring.application.name: bank-account
# 这里要关闭可能是版本不兼容的问题,不然会报错循环依赖
spring.cloud.refresh.refreshable: none

# web config
server:
  port: 8080

# log config
logging.config: classpath:logback.xml

# 启动内存kafka
embedded-kafka: true

# 内存数据库管理页面
spring.h2:
  console:
    path: /h2-console
    enabled: true
    settings:
      web-allow-others: true


#---------------------------------------------------客户端&查询端-----------------------------------------------------------
# spring相关
spring:
  datasource:
    url: jdbc:h2:file:./data/test;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=FALSE;INIT=CREATE SCHEMA IF NOT EXISTS PUBLIC
    username: sa
    password:
    driver-class-name: org.h2.Driver
  kafka:
    bootstrap-servers: 127.0.0.1:9092
    producer:
      batch-size: 1000
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: true
# topic相关
phoenix:
  server:
    topic:
      # 发送给账户服务
      account: account
      account-tn: account
      # 发送到自己的事件源
      create-account-event: create-account-event
      # 监听eventPublish持久化数据源
      account-event-pub: account-event-pub

# phoenix客户端
quantex.phoenix.client:
  name: ${spring.application.name}-client
  mq:
    type: kafka
    address: 127.0.0.1:9092

event:
  listener:
    enabled: true

#---------------------------------------------------服务端包含: entity  transaction  publish-----------------------------------------------------------
# Phoenix所有配置
quantex:
  phoenix:
    server:
      name: ${spring.application.name}
      mq:
        type: kafka
        address: 127.0.0.1:9092
        subscribe-topic: account
      event-store:
        driver-class-name: org.h2.Driver
        data-sources:
          - url: jdbc:h2:file:./data/test;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=FALSE;INIT=CREATE SCHEMA IF NOT EXISTS PUBLIC
            username: sa
            password:
        initial-size: 0
        min-idle: 0
        max-active: 8
      default-serializer: proto_stuff
    event-publish:
      event-task:
        enabled: true
        topic: account-event-pub
      monitor-task:
        enabled: true
        broker-server: 127.0.0.1:9092
        topic: bank-account-monitor
# 账户聚合根主动订阅账户创建的事件
create-account-event:
  mqAddress: 127.0.0.1:9092
  topic: create-account-event

# 事务聚合根发出划拨Cmd的目标Topic(默认值为空字符串代表本集群)
saga-allocate-cmd-topic: ""

# eureka
service-center:
  url: localhost:7070
eureka:
  client:
    enabled: false
    serviceUrl:
      defaultZone: http://${service-center.url}/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    appname: ${spring.application.name}
    metadata-map:
      phoenixEnabled: true